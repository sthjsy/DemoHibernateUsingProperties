<!DOCTYPE html>
<html lang="en">
    <head>
        <title>Bootstrap Example</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="bootstrap.min.css">
        <script src="jquery.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>

    </head>
    <body>
        <!-- Navbar -->

        <div class="container-fluid mt-2">
            <nav class="navbar navbar-expand-sm bg-success navbar-dark">
                <ul class="navbar-nav">
                    <li class="nav-item active">
                        <a class="nav-link" href="#">Logo</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">Signup</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">Login</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link disabled" href="#">Disabled</a>
                    </li>
                </ul>
            </nav>
        </div>
        <div class="container">
            <div class="container pt-1 border border-info rounded-sm mt-4">
                <h4>Employee Personal Details</h4>
                <hr>
                <div class="jumbotron mt-4">
                    <div class="row">
                        <div class="col-sm-2 text-primary"><label for="fname">First Name</label></div>
                        <div class="col-sm-4"><input type="text" class="form-control singleData" id="fname" name="fname" placeholder="First Name" required></div>
                        <div class="col-sm-2 text-primary"><label for="lname">Last Name</label></div>
                        <div class="col-sm-4"><input type="text" class="form-control singleData" id="lname" name="lname" placeholder="Last Name" required></div>
                    </div>
                    <div class="row">
                        <div class="col-sm-2 text-primary"><label for="dob">Date Of Birth</label></div>
                        <div class="col-sm-4"><input type="date" id="dob" name="dob" class="form-control singleData" required></div>
                        <div class="col-sm-2 text-primary"><label for="gender">Gender</label></div>
                        <div class="col-sm-4"><select class="browser-default custom-select singleData" id="gender">
                                <option selected >Select Gender</option>
                                <option value="male">Male</option>
                                <option value="female">Female</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-2 text-primary"><label for="mno">Mobile Number</label></div>
                        <div class="col-sm-4"><input type="text" class="form-control singleData" id="mno" name="mno" required></div>
                        <div class="col-sm-2 text-primary"><label for="lname">E Mail</label></div>
                        <div class="col-sm-4"><input type="text" class="form-control singleData" id="email" name="email" required></div>
                    </div>
                    <div class="row" hidden>
                        <div class="col-sm-4"><input type="text" class="form-control singleData" id="uniqueID" name="uniqueID" required></div>
                    </div>
                </div>
                <div class="jumbotron" id="DataTable" hidden>
                    <table class="table table-bordered" id="eduTable">
                        <thead>
                            <tr class="text-center">
                                <th hidden>Unique ID</th>
                                <th>Sr No</th>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>Date of Birth</th>
                                <th>Gender</th>
                                <th>Mobile No</th>
                                <th>E Mail</th>
                                <th>Edit</th>
                                <th>Remove</th>
                            </tr>
                        </thead>
                        <tbody id="EduTBody"></tbody>
                    </table>
                </div>
                <div class="row mt-4 mb-4 ml-4">
                    <div class="col-sm-2 text-center"><input type="submit" class="btn btn-primary text-center" value="Submit" onclick="insertData();"></div>
                    <!--<div class="col-sm-2 text-center"><input type="submit" class="btn btn-primary text-center" value="Search" onclick="searchData();"></div>-->
                    <div class="col-sm-2 text-center"><input type="submit" class="btn btn-primary text-center" id="showAll" value="Show All Records" onclick="showAll();"></div>
                    <div class="col-sm-2 text-center"><input type="submit" hidden class="btn btn-primary text-center" id="UpdateBtn" value="updateData" onclick="updateData(id);"></div>
                    <!--<div class="col-sm-2 text-center"><input type="submit" class="btn btn-primary text-center" value="Delete" onclick="deleteData();"></div>-->

                </div>
            </div>
        </div>
        <script>

            function insertData()
            {
                $.ajax({
                    type: "POST",
                    url: "Controller",
                    data:
                            {
                                callflag: "insert",
                                fname: $("#fname").val(),
                                lname: $("#lname").val(),
                                dob: $("#dob").val(),
                                mno: $("#mno").val(),
                                email: $("#email").val(),
                                gender: $("#gender").val()
                            },
                    success: function (response) {
                        alert(response);

                    }
                });
            }


            function showAll() {
                $("#EduTBody").html("");
                debugger;
                $.ajax({
                    type: 'POST',
                    url: "Controller",
                    data: {
                        callflag: "showAll"
                    },
                    success: function (response) {
                        $("#DataTable").removeAttr("hidden");
                        debugger;
                        console.log(response);
                        var data = JSON.parse(response);
                        for (var i = 0; i < data.length; i++) {
                            debugger;
                            var id = data[i].id;
                            var html = "<tr  id='" + data[i].id + "'>"
                                    + "<td hidden id='uniqueID" + id + "'>" + data[i].id + "</td>"
                                    + "<td>" + (i + 1) + "</td>"
                                    + "<td id='fname" + id + "'>" + data[i].firstname + "</td>"
                                    + "<td id='lname" + id + "'>" + data[i].lasttname + "</td>"
                                    + "<td id='dob" + id + "'>" + data[i].dob + "</td>"
                                    + "<td id='gender" + id + "'>" + data[i].gender + "</td>"
                                    + "<td id='mno" + id + "'>" + data[i].mno + "</td>"
                                    + "<td id='email" + id + "'>" + data[i].email + "</td>"
                                    + "<td><input type='button' class='btn btn-primary text-center' value='Edit'  id='EditId_" + data[i].id + "' onclick='editData(id);'></td>"
                                    + "<td><input type='button' class='btn btn-primary text-center' value='Remove' id='delID_" + data[i].id + "' onclick='RemoveData(id);'></td>"
                                    + "</tr>";
                            //'delID_'editID_
                            $("#EduTBody").append(html);
                        }
                    }
                });
            }
            function editData(id) {
                debugger;
                alert(id);
                var id1 = $("#" + id).closest("tr").attr("id");
                //alert(idl);
                $("#uniqueID").val($("#uniqueID" + id1).text());
                $("#fname").val($("#fname" + id1).text());
                $("#lname").val($("#lname" + id1).text());
                $("#dob").val($("#dob" + id1).text());
                $("#gender").val($("#gender" + id1).text());
                $("#mno").val($("#mno" + id1).text());
                $("#email").val($("#email" + id1).text());
                $("#UpdateBtn").removeAttr("hidden");
                $("#UpdateBtn").attr("UniqueID", id1);


            }
            function updateData(id) {
                alert("Update Method");
                $.ajax(
                        {
                            type: 'POST',
                            url: "Controller",
                            data: {
                                callflag: "update",
                                fname: $("#fname").val(),
                                lname: $("#lname").val(),
                                dob: $("#dob").val(),
                                mno: $("#mno").val(),
                                email: $("#email").val(),
                                gender: $("#gender").val(),
                                uniqueID: $("#uniqueID").val()
                            },
                            success: function (response) {
                                alert(response);
                                $("#fname").val("");
                                showAll();

                            }
                        });
            }
            function RemoveData(id) {
                debugger;
                console.log(id);
                alert(id);
                var id1 = $("#" + id).closest("tr").attr("id");
                alert(id1);
                $.ajax({
                    type: 'POST',
                    url: "Controller",
                    data: {
                        callflag: "delete",
                        recordid: id1
                    },
                    success: function (response) {
                        debugger;
                        alert(response);
                        $("#" + id).closest("tr").remove();
                    }
                });
            }
        </script>
    </body>
</html>
----------------------------------------------------------------------------------------------------------
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mypack;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import dao.MyConnection;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class Controller extends HttpServlet {

    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException, SQLException, ClassNotFoundException {
        response.setContentType("text/html;charset=UTF-8");
        PrintWriter out = response.getWriter();
        try {

            String callflag = request.getParameter("callflag");
            //Connection
            Connection conn = MyConnection.createConnection();
            PreparedStatement pst;
            ResultSet rs;
            Handler handler = new Handler();
            //Insert Record
            if (callflag.equals("insert")) {
                System.out.println(callflag);
                List<String> list = new ArrayList<>();
                list.add(request.getParameter("fname"));
                list.add(request.getParameter("lname"));
                list.add(request.getParameter("dob"));
                list.add(request.getParameter("gender"));
                list.add(request.getParameter("mno"));
                list.add(request.getParameter("email"));
                out.print(handler.insertData(list));
            } //Delete Record
            else if (callflag.equals("delete")) {
                String recordid = request.getParameter("recordid");
                System.out.println(recordid);
                int result = handler.deleteData(recordid);
                out.print(result + " Record Deleted");
                System.out.print(result + " Record Deleted");
            } //Update Record
            else if (callflag.equals("update")) {
                System.out.println(callflag);
                List<String> list = new ArrayList<>();
                System.out.println(request.getParameter("fname"));
                int id = Integer.parseInt(request.getParameter("uniqueID"));
                System.out.println(Integer.parseInt(request.getParameter("uniqueID")));
                list.add(request.getParameter("fname"));
                System.out.println(request.getParameter("fname"));
                list.add(request.getParameter("lname"));
                list.add(request.getParameter("dob"));
                list.add(request.getParameter("gender"));
                list.add(request.getParameter("mno"));
                list.add(request.getParameter("email"));
                list.add(request.getParameter("UpdateBtn"));
                out.print(handler.updateData(list, id));

            } else if (callflag.equals("search")) {
                Integer id = Integer.parseInt(request.getParameter("id"));

                JsonArray ja = handler.searchData(id);
                out.print(ja);
                System.out.println(ja);
                out.print("Search Method " + id);

            } //Show All Record 
            else if (callflag.equals("showAll")) {
                System.out.println("inside method");
                JsonArray ja = handler.showAll();
                System.out.println("Data Return :: " + new Gson().toJson(ja));
                out.print(ja);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        try {
            processRequest(request, response);
        } catch (SQLException ex) {
            Logger.getLogger(Controller.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Controller.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        try {
            processRequest(request, response);
        } catch (SQLException ex) {
            Logger.getLogger(Controller.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Controller.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
---------------------------------------------------------------------------
package mypack;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import dao.MyConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class Handler {

    private final Connection conn;
    private PreparedStatement pst;
    private ResultSet rs;

    public Handler() throws SQLException, ClassNotFoundException {
        conn = MyConnection.createConnection();
    }

    public String insertData(List<String> list) throws SQLException {
        pst = conn.prepareStatement("insert into JASVEER_YADAV_EMP (FIRSTNAME,LASTNAME,DATEOFBIRTH,GENDER,MOBILENUMBER,EMAIL) values(?,?,?,?,?,?)");
        pst.setString(1, list.get(0));
        pst.setString(2, list.get(1));
        pst.setString(3, list.get(2));
        pst.setString(4, list.get(3));
        pst.setString(5, list.get(4));
        pst.setString(6, list.get(5));
        return pst.executeUpdate() + " Record Added";
    }

    public JsonArray showAll() throws SQLException {
        pst = conn.prepareStatement("select * from JASVEER_YADAV_EMP");
        JsonArray ja = new JsonArray();
        rs = pst.executeQuery();
        while (rs.next()) {
            JsonObject jo = new JsonObject();
            jo.addProperty("firstname", rs.getString("FIRSTNAME"));
            jo.addProperty("lasttname", rs.getString("LASTNAME"));
            jo.addProperty("dob", rs.getString("DATEOFBIRTH"));
            jo.addProperty("gender", rs.getString("GENDER"));
            jo.addProperty("mno", rs.getString("MOBILENUMBER"));
            jo.addProperty("email", rs.getString("EMAIL"));
            jo.addProperty("id", rs.getString("ID"));
            ja.add(jo);
            new Gson().toJson(ja);
        }
        return ja;
    }

    public int deleteData(String recordid) throws SQLException {
        pst = conn.prepareStatement("delete from JASVEER_YADAV_EMP where ID=?");
        pst.setString(1, recordid);
        return pst.executeUpdate();
    }

    public JsonArray searchData(Integer id) throws SQLException {
        pst = conn.prepareStatement("select *from JASVEER_YADAV_EMP where ID=?");
        pst.setInt(1, id);
        rs = pst.executeQuery();
        JsonArray ja = new JsonArray();
        while (rs.next()) {
            JsonObject jo = new JsonObject();
            jo.addProperty("firstname", rs.getString("FIRSTNAME"));
            jo.addProperty("lasttname", rs.getString("LASTNAME"));
            jo.addProperty("dob", rs.getString("DATEOFBIRTH"));
            jo.addProperty("gender", rs.getString("GENDER"));
            jo.addProperty("mno", rs.getString("MOBILENUMBER"));
            jo.addProperty("email", rs.getString("EMAIL"));
            jo.addProperty("id", rs.getInt("ID"));
            ja.add(jo);
            new Gson().toJson(ja);
        }
        return ja;
    }

    public String updateData(List<String> list, int id) throws SQLException {
        int i = 0;
        try {
            System.out.println("dfgfd" + id);
            pst = conn.prepareStatement("update JASVEER_YADAV_EMP set FIRSTNAME=?, LASTNAME=?,DATEOFBIRTH=?,GENDER=?,MOBILENUMBER=?, EMAIL=? where ID=?");
            pst.setString(1, list.get(0));
            System.out.println("list.get(0) " + list.get(0));
            pst.setString(2, list.get(1));
            pst.setString(3, list.get(2));
            pst.setString(4, list.get(3));
            pst.setString(5, list.get(4));
            pst.setString(6, list.get(5));
            pst.setInt(7, id);
            i = pst.executeUpdate();
            System.out.println("i " + i);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return i + " Record Update";

    }

}
